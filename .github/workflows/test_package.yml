name: test, package

on: [push, pull_request_target]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      # max-parallel: 6
      matrix:
        os: [ubuntu-latest]
        python-version: [3.8]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      # if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade --user pip
        pip install setuptools
        python --version
        pip --version
        pip list

    - name: Lint and Tests
      run: |
        pip install -e .[testing]
        python -c 'import brainmatch'
        flake8 . --count --statistics
        coverage run --source brainmatch -m pytest -o junit_family=xunit2 -v --doctest-modules --junitxml=junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml

    - name: Upload pytest test results
      uses: actions/upload-artifact@main
      with:
        name: pytest-results-${{ runner.os }}-${{ matrix.python-version }}
        path: junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: always()

    - name: Statistics
      if: success()
      run: |
         coverage report

    - name: Package Setup
      run: |
        pip install build
        # check-manifest
        python -m build
        # twine check dist/*
